import test, { expect } from "@fixtures/basepages";
import * as data from "testData/login.cred.json"
import { Page } from '@playwright/test';
test("Verify add events ",async({page,context,loginPage,eventsPage,registrationPage})=>{
    await test.step("08 Validate successfully login with valid username and password.",async()=>{
        await page.goto("/login")
        await page.locator('//input[@placeholder="Password"]').clear()
        await page.locator('//input[@placeholder="Email/Username"]').clear()
       await page.reload()
        await loginPage.inputusernamefield(data["2FAUser"])
        await loginPage.enterLoginPassword("Test@1234")
        await loginPage.clickSubmittBtn()
        await page.waitForTimeout(2000)
        const Page = await context.newPage()
        await registrationPage.gotoForOtpValue(Page,data.OtpLink)
        await registrationPage.fillOtpMail(Page,data["2FAUser"])
        // await Page.locator("#EmailPhone").type(mail,{delay:100})
        await Page.waitForTimeout(5000)
        await registrationPage.clickOtpMailSubmittBtn(Page)
        await Page.locator("#otpValue").selectText();
        await Page.keyboard.press("Control+C");
        await Page.close()
        await  page.bringToFront()
        await loginPage.clickOTPInputField()
        await page.keyboard.press("Control+V")
        await page.waitForTimeout(1000)
    })
   await eventsPage.clickEventsmanagement()
   await eventsPage.clickEvent()
   await eventsPage.clickAddEventBtn()
   await eventsPage.clickforselectCompany()
   await eventsPage.InputEventName()
   await eventsPage.inputEvent_DOB()
   await eventsPage.selectEventStartTime()
   await eventsPage.checkAditionalInfo()
   await eventsPage.AditionalInfo_BioMetrics_BloodSugar()
   await eventsPage.AditionalInfo_BioMetrics_BloodPresure()
   await eventsPage.selectEMployeeForEvent()
   await eventsPage.inputAddress()
   await eventsPage.EventVanueType_Indoor()
   await eventsPage.Select_Wifi_Yes()
   await eventsPage.InputNo_Of_Vendor_Event()
   await eventsPage.ClickSubmitt()
//    await eventsPage.verifyVendorCategoryRequiredText()
   await eventsPage.verifyCompanyPreferedVendor()
   await eventsPage.selectCompanyPreferedVendorType_Dentists()
   await eventsPage.clickVendorNameField()
   await eventsPage.ClickCompanyPreferedVendor_AddButton()
   await eventsPage.ClickNextButton()
   await eventsPage.verifyInsuranceEnrollment()
   await eventsPage.OpenEnrollmentDate()
   await eventsPage.selectInsuranceCompany()
   await eventsPage.select_InsuranceType()
   await eventsPage.inputContactPesrsonName()
   await eventsPage.inputCompanyInsuranceProvider_Designation()
   await eventsPage.InputContactPerson_PhoneNumber_BD()
   await eventsPage.inputContactPesrsonEmail()
   await eventsPage.ClickNextButton()
})